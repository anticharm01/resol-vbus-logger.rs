###
### Connection settings
###
### This section defines how the VBus data are received.
###

### Absolute path to the serial port.
### Disable the `address` setting below if you want to use this.
# path = "/dev/tty.usb..."

### IP address and port of the VBus-over-TCP device.
### Disable the `path` setting above if you want to use this.
address = "127.0.0.1:7053"

### Password of the VBus-over-TCP device.
password = "vbus"

### Channel to connect to on the multi-channel VBus-over-TCP device (like the DL3).
channel = 0

### Number of seconds until the live data receiver times out after receiving no data
### Comment out if not needed
timeout = 10

### List of known packet IDs to expect on this connection. Speeds up the
### "settling" phase.
known_packet_ids = [
    # "00_0010_7E11_10_0100",
    # "00_0010_7E11_10_0101",
    # "00_6651_7E11_10_0200",
    # "00_6652_7E11_10_0200",
    # "00_6653_7E11_10_0200",
    # "00_6654_7E11_10_0200",
    # "00_6655_7E11_10_0200",
]


###
### PNG generator
###
### This generator creates a PNG using a background images and overlaying
### it with current VBus values. In this example it is customized for a
### SKSC3 controller, but can be adapted in `src/png_generator.rs`.
###

### Number of seconds between each PNG creation.
### Use 0 to disable this generator.
png_tick_interval = 0

### Filename of the input image.
png_input_filename = "Heizungsschema.bmp"

### Filename of the output image.
png_output_filename = "test.png"


###
### CSV generator
###
### This generator append a row containing all VBus values to a file.
###

### Number of seconds between each CSV entry.
### Use 0 to disable this generator.
csv_tick_interval = 0

### Filename pattern of the CSV. May contain placeholders for date / time.
### See https://docs.rs/chrono/0.3.1/chrono/format/strftime/index.html for details.
csv_output_filename_pattern = "TextData_%Y%m%d.log"


###
### Live data text generator
###
### This generator creates a CSV-like text file (separated by semicolons)
### containing a row for each VBus value including the following data in the
### columns:
###
### - Packet field ID (see http://danielwippermann.github.io/resol-vbus/vbus-packet-fields.html)
### - Value
### - Unit
### - Packet and field name
###

### Number of seconds between each live data text write.
### Use 0 to disable this generator.
live_data_text_tick_interval = 0

### Filename of the live data text file.
live_data_text_output_filename = "test.txt"


###
### SQLite logger
###
### This logger stores VBus data in a SQLite database.
###

### Number of seconds between each live data storage.
### Use 0 to disable this logger
sqlite_tick_interval = 0

### Filename of the database file.
sqlite_filename = "test.sqlite"

### The SQLite logger can be used in two modes:
### - the "relational" mode
### - the "tabular" mode
###
### In relational mode data is stored in two tables:
### - "datasets" contains a data set ID and the timestamp of recording
### - "fields" contains the associated data set ID, the VBus packet field ID
###    and the value
### The table names can be configured using the "sqlite_datasets_table" and
### "sqlite_fields_table". Every time the SQLite logger stores a data set
### it creates a new row in the "datasets" table and then creates a new row
### in the "fields" table for each VBus packet field to store.
###
### In the tabular mode data is stored in only one table. That table contains
### both the timestamp of recording as well as multiple columns for the VBus
### packet field values. Every time the SQLite logger stores a data set
### it create a new row by executing the "sqlite_statement" passing the
### values configured in the "sqlite_fields" list.

### Name of the data sets table used in relational mode
sqlite_datasets_table = "datasets"

### Name of the fields tables used in relational mode
sqlite_fields_table = "fields"

### SQLite statement to use for inserts in tabular mode
# sqlite_statement = "INSERT INTO data (time, temp1, temp2, temp3, temp4, temp5, temp6, pump1, pump2, pump3, heat) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"

### VBus values to use for inserts in tabular mode. Each "?" in the statement
### above must have a matching VBus packet field ID or one of the magic
### keywords in this array. The keywords are:
###
### - "UtcDateTime": the RFC3339 formatted time using the UTC timezone
### - "LocalDateTime": the RFC3339 formatted time using the local timezone
# sqlite_fields = [
#     "UtcDateTime",
#     "00_0010_7E11_10_0100_000_2_0",
#     "00_0010_7E11_10_0100_002_2_0",
#     "00_0010_7E11_10_0100_004_2_0",
#     "00_0010_7E11_10_0100_006_2_0",
#     "00_0010_7E11_10_0100_008_2_0",
#     "00_0010_7E11_10_0100_010_2_0",
#     "00_0010_7E11_10_0100_076_1_0",
#     "00_0010_7E11_10_0100_077_1_0",
#     "00_0010_7E11_10_0100_078_1_0",
#     "00_0010_7E31_10_0100_000_4_0",
# ]


###
### Other settings
###

### The filename of the VBus Specification File (VSF).
vsf_filename = "vbus_specification.vsf"
